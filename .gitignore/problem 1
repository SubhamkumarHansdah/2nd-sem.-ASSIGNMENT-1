#include<iostream>
using namespace std;

//Data structure of nodes.
class node{
int data;             
//Node has two components,one for storing data and other for linking it to other nodes.
node*next;
};

//Data structure of linked list.
class linkedList{
private:            
//Can be accessed only through member functions.
    node*head;
    node*tail;
public:
    //Constructor i.e. initialization of head and tail.
    linkedList(){
    head=NULL;
    tail=NULL;
    }

int n=0;                     
//Will be used to count the number the nodes.

void addNode(int a){         
//Function to add a node.
	node*temp=new node;

    if (head==NULL){         
   	head=temp;
    tail=temp;
    temp->data=a;
    temp->next=NULL;

	}
	else{                  
		node*temp=new node;
		temp->data=a;
		temp->next=NULL;
		tail->next=temp;
		tail=temp;
	}

	n++;                 
  //Adds one to the value of n every time a node is added and similarly substract one value in the following functions.
}

void insertAt(int pos, int data){           
//Insert node at any valid position.
    if (pos==n+1){
        addNode(data);
        n++;
    }
    else if(pos>n+1){
        cout<<"linked list does not have that many elements";
    }
    else if(pos<=n && pos>0){
        node*temp=new node;
        node*temp1=head;
        for(int x=1;x<pos-1;x++){
            temp1=temp1->next;
        }
        temp->next=temp1->next;
        temp1->next=temp;
        temp->data=data;
        n++;
    }
    else{cout<<"invalid entry";}
}
void deleteNode(){                   
//Delete the last node.
    node*temp=head;
    while(temp->next!=tail){
        temp=temp->next;
    }
    tail=temp;
    temp=temp->next;
    delete temp;
    tail->next=NULL;
    n--;
}
void deleteNodeAt(int pos){          
//Delete node any given position

if (pos<n){
node*temp=head;

for(int x=1;x<pos-1;x++){
    temp=temp->next;
}

node*temp1=temp->next;
temp->next=temp1->next;
delete temp1;
n--;
}
else if (pos==n){
    deleteNode();
    n--;
}
else if (pos>n){
    cout<<"invalid entry";
}
}
void countItems(){
cout<<"the number of elements are :"<<n<<endl;
}

void display(){                  
//Displays the elements of linked list.
		node*temp=head;
		for (node* temp=head; temp!=NULL; temp=temp->next){
			cout << temp->data << "->";
		}
		cout << "NULL" << endl;
	}
};
int main(){
    linkedList s;           
    //Create a linked list named s.
for(int i=1;i<11;i++){        
//Adding elements to the node.
    s.addNode(i);
}
s.display();                  
s.display();                  
s.deleteNode();
s.display();
s.deleteNodeAt(3);
s.display();
s.countItems();
s.insertAt(3,45);
s.display();
return 0;
}
